#!/usr/bin/env python3
# Parse html using Bautiful Soap
# @hint As data source, we use here .html files generated by 'TimePlanner' android app
# @source https://python-scripts.com/beautifulsoup-html-parsing

# form file parsing
import cgi
import cgitb
import os

from bs4 import BeautifulSoup

from ..common.functions import convert_tp_date, convert_tp_time


########################################################################################################################

# Parse html file
def parse_html(file_name):
    with open(file_name, encoding="utf8") as f:

        # read file
        contents = f.read()

        # load as DOM
        soup = BeautifulSoup(contents, 'lxml')

        cats = []
        for cat in soup.find_all("b"):
            cats.append(cat.text)

        tables = soup.findAll("table", {"cellpadding": "10"})
        for table in tables:
            cat = cats.pop(0)
            for row in table.findAll("tr"):
                cells = row.findAll("td")
                if len(cells) == 3:
                    time = cells[0].find(text=True)
                    date = cells[1].find(text=True)
                    # convert date to proper format, ex: 3 авг. 2021 г. => '2020-08-03T00:00:00+03:00'
                    times = time.split('- ')
                    time1 = convert_tp_time(times[0])
                    time2 = convert_tp_time(times[1])
                    # make classic dateTimes, like: '2021-06-30 17:42:00'
                    date_start = convert_tp_date("%s %s" % (date, time1))
                    date_end = convert_tp_date("%s %s" % (date, time2))
                    # action name can be empty...
                    name = str(cells[2].find(text=True) or '')
                    # add category name to action name:
                    name = "%s / %s" % (cat, name) if name != "" else cat
                    print("{0}\t{1}\t{2}".format(date_start, date_end, name))


########################################################################################################################
# Upload file

# @see https://stackoverflow.com/questions/25489397/how-to-upload-and-read-a-file
def upload_file():
    cgitb.enable()
    form = cgi.FieldStorage()
    if 'file' in form and form['file'].file:
        print('<p>Uploading file "%s:...</p>' % form['file'].filename);
        # move uploaded file
        new_filename = './import/'.form['file'].filename;
        os.replace(form['file'].file, new_filename);
        # parse uploaded file
        # parse_html(new_filename)

# parse_html("import/time_planner_logged_activities_2022-01-18_day.html")
